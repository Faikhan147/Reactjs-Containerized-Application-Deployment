apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: prometheus
  namespace: prometheus
spec:
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      containers:
        - name: prometheus
          image: prom/prometheus:v2.31.1
          args:
            - "--config.file=/etc/prometheus/prometheus.yml"
            - "--storage.tsdb.path=/prometheus"
            - "--web.enable-lifecycle"
          volumeMounts:
            - name: prometheus-config
              mountPath: /etc/prometheus
            - name: prometheus-storage
              mountPath: /prometheus
      volumes:
        - name: prometheus-config
          configMap:
            name: prometheus-config
        - name: prometheus-storage
          emptyDir: {}

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: prometheus
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s # Default scrape interval for all jobs

    scrape_configs:
      # Kubernetes Nodes Service Discovery for Node Exporters
      - job_name: 'kubernetes-nodes'
        kubernetes_sd_configs:
          - role: node # Specify the role as 'node'
        relabel_configs:
          - source_labels: [__meta_kubernetes_node_name] # Scrape metrics from nodes
            target_label: kubernetes_node
          - source_labels: [__meta_kubernetes_node_label_kubernetes_io_hostname] # Include node hostname
            target_label: kubernetes_hostname

      # Kubernetes Pods Service Discovery (for scraping Kubernetes pods)
      - job_name: 'kubernetes-pods'
        kubernetes_sd_configs:
          - role: pod # Scrape all pods (can be further refined with relabeling)
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_label_app] # Use pod labels for filtering
            target_label: app
